volumePermissions:
  enabled: true
image:
  debug: true

 # TODO root credentials here
postgresqlPassword: postgres
postgresqlUsername: postgres
postgresqlDatabase: postgres

initdbUser: postgres
initdbPassword: postgres

initDbScripts:
  init.sql: "
BEGIN;

--CREATE DATABASE authn;
--CREATE DATABASE feeds;
--CREATE DATABASE uat_feeds;

select * from sys.information_schema;


START TRANSACTION;
CREATE USER authn WITH PASSWORD 'authn';
CREATE USER feeds WITH PASSWORD 'feeds';
CREATE USER uat_feeds WITH PASSWORD 'uat_feeds';

GRANT ALL PRIVILEGES on DATABASE authn TO authn;
GRANT ALL PRIVILEGES on DATABASE feeds TO feeds;
GRANT ALL PRIVILEGES on DATABASE uat_feeds TO uat_feeds;


CREATE TABLE IF NOT EXISTS accounts (
    id SERIAL PRIMARY KEY,
    username TEXT UNIQUE DEFAULT NULL,
    password TEXT DEFAULT NULL,
    locked boolean NOT NULL DEFAULT false,
    require_new_password boolean NOT NULL DEFAULT false,
    password_changed_at timestamptz DEFAULT NULL,
    created_at timestamptz NOT NULL,
    updated_at timestamptz NOT NULL,
    deleted_at timestamptz DEFAULT NULL
);

COMMIT;"


master:
  extraVolumes:
  - name: certs
    secret:
      secretName: 'ssl-proxy-secret'
      defaultMode: 0640
  extraVolumeMounts:
  - name: certs
    mountPath: "/var/lib/certs"

postgresqlExtendedConf: { "ssl": "on", "sslCertFile":"'/var/lib/certs/server.crt'", "sslKeyFile":"'/var/lib/certs/server.key'" }
