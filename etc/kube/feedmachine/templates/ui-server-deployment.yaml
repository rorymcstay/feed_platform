apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ui-server
  name: ui-server
spec:
  replicas: {{ .Values.uiServerReplicas }}
  selector:
    matchLabels:
      app: ui-server
  template:
    metadata:
      labels:
        app: ui-server
    spec:
      imagePullSecrets:
      - name: awsecr-cred 
      containers:
      - name: ui-server
        image: {{ .Values.imageRepository }}/{{ .Values.uiServerVersion }}
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        - name: KAFKA_TOPIC_PREFIX
          valueFrom:
            configMapKeyRef:
              key: KAFKA_TOPIC_PREFIX
              name: {{ .Values.environment }}-env
        - name: KAFKA_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: KAFKA_ADDRESS
              name: {{ .Values.environment }}-env
        - name: UISERVER_HOST
          valueFrom:
            configMapKeyRef:
              key: FLASK_HOST
              name: feedmachine-env
        - name: FLASK_PORT
          valueFrom:
            configMapKeyRef:
              key: FLASK_PORT
              name: feedmachine-env
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: LOG_LEVEL
              name: {{ .Values.environment }}-env
        - name: NANNY_HOST
          valueFrom:
            configMapKeyRef:
              key: NANNY_HOST
              name: feedmachine-env
        - name: ROUTER_HOST
          valueFrom:
            configMapKeyRef:
              key: ROUTER_HOST
              name: feedmachine-env
        - name: SELENIUM_PORT
          valueFrom:
            configMapKeyRef:
              key: SELENIUM_PORT
              name: feedmachine-env
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              key: DATABASE_HOST
              name: {{ .Values.environment }}-env
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              key: DATABASE_NAME
              name: {{ .Values.environment }}-env
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              key: DATABASE_PORT
              name: {{ .Values.environment }}-env
        - name: DATABASE_PASS
          valueFrom:
            configMapKeyRef:
              key: DATABASE_PASS
              name: {{ .Values.environment }}-env
        - name: MONGO_HOST
          valueFrom:
            configMapKeyRef:
              key: MONGO_HOST
              name: {{ .Values.environment }}-env
        - name: MONGO_PASS
          valueFrom:
            configMapKeyRef:
              key: MONGO_PASS
              name: {{ .Values.environment }}-env
        - name: MONGO_USER
          valueFrom:
            configMapKeyRef:
              key: MONGO_USER
              name: {{ .Values.environment }}-env
        - name: CHAIN_DB
          valueFrom:
            configMapKeyRef:
              key: CHAIN_DB
              name: {{ .Values.environment }}-env
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              key: DATABASE_USER
              name: {{ .Values.environment }}-env
        - name: AUTHN_SERVER
          value: {{ .Values.authServer }}
        - name: SELECTOR_GADGET
          value: /data/content/

        resources: {}
      restartPolicy: Always

